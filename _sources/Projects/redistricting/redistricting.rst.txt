Redistricting
=============

.. rubric:: (due: Sunday, May 15, 11:59 PM)

In the US, the people are represented in Congress by representatives elected by the people of their state.
Each state is partitioned into several congressional districts, and one representative is elected from each
district.  These congressional districts are also used when the state is distributing money for schools,
infrastructure, social programs, and more.

Every 10 years, after the decennial national census, the congressional district borders in every state are
redrawn in a process known as _redistricting_.  There are many criteria that those in charge of the
redistricting process use when redrawing the congressional district lines, including

* equal population in each district,
* shapes of the districts,
* political lean of each district,
* majority minority districts to ensure representation of the minority.

In this project we will focus on the first two of these criteria.

Equal population
~~~~~~~~~~~~~~~~

In order to guarantee that each person gets equal representation, each representative sent to Congress
should be representing the same number of persons.  This means that a "good" district map should have
districts with equal population.  This means that districts in less populated areas are going to be bigger
than districts in densely populated areas.

District shapes
~~~~~~~~~~~~~~~

Another desireable quality for congressional district maps is for the districts to have a "regular" shape.
Consider the following district map, and notice the shape of the district labeled 19.

.. figure:: new_york2020.jpeg
    :width: 450px
    :align: center

This district does not have a "regular" shape.

Scoring a district map
~~~~~~~~~~~~~~~~~~~~~~

For any given map, there is an astromonically large number of possible ways to draw the district borders,
but not all of these are "good", in fact most of them are quite bad.  Imagine you are the person responsible
for redrawing the district lines.  How do you compare two different district maps?  One way to do this would
be to assign a numerical score to each district map and keep the map with the better score.  For the purposes
of this project, this score would have to take into consideration both the populations and shapes of the
districts.

To measure how equally distributed the population is among the districts, we can use the statistical 
standard deviation (SD) of the district populations.  The higher the SD, the less evenly
distributed the population is among the districts.  Dividing by the total population will normalize this
population metric to a value between 0 and 1.

To measure how regularly shaped the districts are, we can calculate the perimeter-area ratio (PAR) of each 
district.  The shape with the lowest PAR is a circle with a value of :math:`2\sqrt{\frac{\pi}{A}}` where 
:math:`A` is the area of the circle.  All other shapes with the same area will have a PAR larger than this, 
and as the area increases, this lower bound will decrease to zero.  For the purposes of this project, the
maximum value of the PAR is 4.  The shape metric will be the sum of the PARs for each district, divided by
4 times the number the districts.

Assuming there are :math:`k` districts and a total population of :math:`m`, the map score is

.. math:: \alpha\cdot\text{SD}(\text{district popuations}) + (1-\alpha)\cdot\frac{1}{4k}\sum_{i=1}^k \text{PAR}(\text{district }i),

where :math:`\alpha` is a parameter between 0 and 1 which indicates how much priority is given to the 
population metric.

Automating redistricting
========================

The goal of this project is to write code that can model the redistricting process using the first two
criteria listed above.  In particular, we will use a monte carlo Markov chain process to go from a randomly
generated district map to an acceptable district map by making changes that will equalize the population of
each district and make the shapes more regular.

Our maps will consist of a 20x20 array of _blocks_, each having the same population.  The districts will be
made up of groups of neighboring blocks.  Here is an example of what this might look like.

...

*Exercise:*  Write a function that will generate a random district map of a given size with a given number
of districts.  To do this, randomly select blocks to be the "center" of each district, and assign each block
to the district whose center is closest.

*Exercise:*  Write a function that will calculate the map score of an given district map.

Monte carlo simulation
~~~~~~~~~~~~~~~~~~~~~~

A _monte carlo simulation_ is a mathematical modeling technique where the state of a dynamical system 
(changes over time) is updated to a new state that is randomly chosen from the collection of all the 
possible states based on the current state.

For this project, we will update the district map by randomly selecting a block on the border of its district
and switching it to one of the other districts it is bordering.  Effectively choosing at random a new map
that differs from the current map by one border block.

Markov Chain
~~~~~~~~~~~~

A _Markov chain_ is a sequence of states of a system where each state is generated from the previous
based on a set of stocastic rules (based on probability).

Once a new district map is selected that differs from the current by one border block, the new map and the 
map will be scored.  If the new map has a better score, we will keep it.  If the new map does not have a
better score, we have a probability :math:`p` of keeping it anyways.  Thus we will have a Markov chain of 
district maps.

*Exercise:*  Write a function that will update a given district map based on the rules described above.

Project
=======

Simulate the redistricting process by animating the Markov chain described above using the following code.


*Extra Credit 1:* To make the simulation more realistic, allow the blocks to have different populations, and 
update your map score calculation accordingly.

*Extra Credit 2:* Gerrymandering is when the district borders are drawn to favor one political party over
another.  One way to try to avoid this is to require that the percentage of districts that favor party A must
closely match the percentage of blocks that favor party A.  Include this in your simulation.

*Extra Credit 3:* Another way to measure the shape of a district is to use the _centering metric_.  This
metric calculates the _center_ of the district and takes the standard deviation of distance from the center
of each block in the district. To normalize, you can divide by :math:`\sqrt{2}\cdot n` where :math:`n` is
size of the map.  Include this metric in your map score.